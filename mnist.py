# -*- coding: utf-8 -*-
"""mnist.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lMbuLZp9iYxkYCrV5paqW9k1C_77Bif0
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import keras
from keras import layers
from keras import models
 
from keras.models import Sequential
from keras.layers import Dense, Activation, Dropout, Flatten, Conv2D, MaxPooling2D
from keras.layers.normalization import BatchNormalization
from keras.datasets import mnist
from keras import utils

(x_train, y_train), (x_test, y_test)=mnist.load_data(
    path='mnist.npz'
)

x_train.shape

model = Sequential()
model.add(layers.InputLayer(input_shape=(28,28,1)))

model.add(Conv2D(32,kernel_size=3,activation='relu' ))

model.add(MaxPooling2D(2,2))
#model.add(Dropout(0.2))

model.add(Conv2D(64,kernel_size=3,activation='relu'))
model.add(MaxPooling2D(2,2))
#model.add(Dropout(0.2))
model.add(Flatten())
model.add(Dense(1600))
model.add(Dense(10,activation='softmax'))

model.summary()

y_train=y_train.reshape(60000,1)
y_test=y_test.reshape(10000,1)
print(y_train.shape,y_test.shape)

y_train= utils.to_categorical(y_train)
y_test = utils.to_categorical(y_test)

model.compile(loss='categorical_crossentropy',optimizer='adam',metrics=['accuracy'])
x_train = x_train.reshape(-1,28, 28, 1)   #Reshape for CNN -  should work!!
x_test = x_test.reshape(-1,28, 28, 1)
model.fit(x_train,y_train,epochs=25)

model.evaluate(x_test,y_test)

